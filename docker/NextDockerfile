FROM node:18-alpine AS base

# ths docker file generates an image of 3+GB size


# Install dependencies only when needed
FROM base AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
RUN npm install -g pnpm@7.28.0
# RUN npm install -g pnpm@8.6.9
# RUN yarn add global pnpm

WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json pnpm-lock.yaml ./
RUN pnpm i --frozen-lockfile; 


# Rebuild the source code only when needed
FROM base AS builder

WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
# ADD ./wait-for-it.sh ./wait-for-it.sh

COPY . .

ENV NODE_ENV production

# RUN chmod +x ./wait-for-it.sh

# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry during the build.
ENV NEXT_TELEMETRY_DISABLED 1

ARG NEXT_PUBLIC_SERVER_ENDPOINT http://localhost
ENV NEXT_PUBLIC_SERVER_ENDPOINT=${NEXT_PUBLIC_SERVER_ENDPOINT}
ENV NEXT_PUBLIC_SERVER_ENDPOINT http://localhost

# RUN ./wait-for-it.sh

# RUN ["npm", "run", "build"]
RUN yarn build

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

# ENV NODE_ENV = "production"
# Uncomment the following line in case you want to disable telemetry during runtime.
ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

USER nextjs
# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
# COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
# COPY --from=builder --chown=nextjs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nextjs:nodejs /app/package.json /app/pnpm-lock.yaml ./
# COPY --from=builder --chown=nextjs:nodejs /app/next.config.js ./
RUN chown -R nextjs:nodejs /app/.next
RUN npm i next@13.4.6
# COPY --from=builder --chown=nextjs:nodejs /app/wait-for-it.sh ./wait-for-it.sh

# here we are reading the value from the build args and inserting into the environment variables

ARG NEXT_PUBLIC_SERVER_ENDPOINT http://localhost
ENV NEXT_PUBLIC_SERVER_ENDPOINT=${NEXT_PUBLIC_SERVER_ENDPOINT}
ENV NEXT_PUBLIC_SERVER_ENDPOINT http://localhost

ENV NODE_ENV production


EXPOSE 3000

# ENV NEXT_PUBLIC_SERVER_ENDPOINT="http://172.20.0.5:1999"
# ENTRYPOINT ["/app/entrypoint.sh"]

CMD ["yarn", "start"]
